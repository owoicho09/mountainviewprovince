# Generated by Django 5.1 on 2024-08-31 20:23

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import shortuuid.django_fields
import studentauth.models
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "fullname",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Full name must contain only letters and spaces.",
                                regex="^[a-zA-Z\\s]+$",
                            )
                        ],
                    ),
                ),
                ("student_id", models.CharField(max_length=100, unique=True)),
                ("email", models.EmailField(blank=True, max_length=200, null=True)),
                ("phone", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "gender",
                    models.CharField(
                        choices=[
                            ("male", "Male"),
                            ("female", "Female"),
                            ("other", "Other"),
                        ],
                        default="Other",
                        max_length=20,
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="custom_user_set",
                        related_query_name="custom_user",
                        to="auth.group",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="custom_user_permissions_set",
                        related_query_name="custom_user_permissions",
                        to="auth.permission",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="StudentProfile",
            fields=[
                (
                    "pid",
                    shortuuid.django_fields.ShortUUIDField(
                        alphabet="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789",
                        length=7,
                        max_length=15,
                        prefix="",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("fullname", models.CharField(blank=True, max_length=100, null=True)),
                ("phone", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "image",
                    models.FileField(
                        blank=True,
                        default="default.jpeg",
                        null=True,
                        upload_to=studentauth.models.user_directory_path,
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("male", "Male"),
                            ("female", "Female"),
                            ("other", "Other"),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "country",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("nigeria", "NIGERIA"),
                            ("ghana", "GHANA"),
                            ("southafrica", "SOUTH AFRICA"),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
                ("city", models.CharField(blank=True, max_length=200, null=True)),
                ("state", models.CharField(blank=True, max_length=200, null=True)),
                (
                    "postal_code",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("address", models.CharField(blank=True, max_length=200, null=True)),
                (
                    "identity_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("school id", "SCHOOL ID"),
                            ("acceptance letter", "ACCEPTANCE LETTER"),
                            ("school fees receipt", "SCHOOL FEES RECEIPT"),
                        ],
                        max_length=200,
                        null=True,
                    ),
                ),
                (
                    "identity_image",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=studentauth.models.user_directory_path,
                    ),
                ),
                ("paid", models.BooleanField(default=False)),
                ("date", models.DateField(auto_now_add=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile",
                        to="studentauth.customuser",
                    ),
                ),
            ],
        ),
    ]
